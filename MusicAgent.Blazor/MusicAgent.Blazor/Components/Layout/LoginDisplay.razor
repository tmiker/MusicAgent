@implements IDisposable
@using System.Security.Claims;
@using Microsoft.AspNetCore.Components.Authorization
@* @using Blazored.LocalStorage;
@inject ILocalStorageService _localStorage;
@inject AuthenticationStateProvider _authStateProvider; *@
@inject NavigationManager NavigationManager;

@* <AuthorizeView>
    <Authorized>
        <div class="d-flex align-items-center mx-3">
            <h5 class="my-0 text-warning"><i>Hello @context.User.FindFirst(ClaimTypes.Name)?.Value !</i></h5>
        </div>
        <div class="d-flex align-items-center">
            <button class="btn btn-primary mx-3" @onclick="LogoutAsync">Logout</button>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="d-flex align-items-center mx-3">
            <a class="btn btn-primary" href="/login">Login</a>
        </div>
        <div class="d-flex align-items-center">
            <a class="btn btn-primary" href="/register">Register</a>
        </div>
    </NotAuthorized>
</AuthorizeView> *@

@* <div class="d-flex align-items-center px-3">
            <a class="btn btn-primary" href="/login">Login</a>
        </div>
        <div class="d-flex align-items-center">
            <a class="btn btn-primary" href="/register">Register</a>
        </div> *@

<ul class="navbar-nav me-auto">
    <AuthorizeView>
        <NotAuthorized>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <i class="bi-door-open"></i> &nbsp; Login
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="register">
                    <i class="bi-person-fill"></i> &nbsp; Register
                </NavLink>
            </li>
        </NotAuthorized>
        <Authorized>
            <li class="nav-item px-3 button-logout">
                <NavLink class="nav-link">
                    <form action="logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@_currentUrl" />
                        <button type="submit" class="button-logout">
                            <i class="bi-door-closed"></i> &nbsp; Logout @* (@context?.User?.Identity?.Name) *@
                        </button>
                    </form>
                </NavLink>
            </li>
        </Authorized>
    </AuthorizeView>
</ul>


@code {
    private string? _currentUrl;

    protected override void OnInitialized()
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs args)
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(args.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

}